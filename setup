#!/bin/sh

# エラーや未定義変数への参照があれば即終了
set -eu

cd $HOME

DOTFILES_DIR=$HOME/dotfiles
SHELL_DIR=$DOTFILES_DIR/sh
SYMLINK_DIR=$DOTFILES_DIR/symlink

# OSチェック
if [ "$(uname -m)" != "arm64" ] ; then
	echo "このスクリプトはAppleシリコンを搭載したMac OSでのみ動作します。"
	exit 1
fi

# App Storeログインチェック
echo "App Storeへログインしましたか？[y/N]"
read answer
case $answer in
[Yy]* )
	;;
* )
	echo "先にApp Storeにログインしてから再度実行してください。"
	exit 0
	;;
esac

# 参考: https://zenn.dev/watsuyo_2/articles/734f3bf537b7ad
# Homebrewをインストールする
if [ ! -f /opt/homebrew/bin/brew ]
	then
		echo "Homebrewをインストールしています..."
		/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
	else
		echo "Homebrewは既にインストールされています。"
fi

# dotfilesをクローンする
if [ ! -d $DOTFILES_DIR ]
	then
		echo "公開鍵をGitHubに登録しましたか？[y/N]"
		read answer
		case $answer in
		[Yy]* )
			;;
		* )
			echo "公開鍵をGitHubに登録してからやり直してください。"
			echo "1. ssh-keygen -t ed25519 -C YOUR_EMAIL_ADDRESS"
			echo "2. pbcopy < ~/.ssh/id_rsa.pub"
			echo "詳細は https://docs.github.com/ja/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account を確認してください。"
			exit 0
			;;
		esac

		echo "dotfilesをダウンロードしています..."
		git clone git@github.com:ymgn9314/dotfiles.git
	else
		echo "dotfilesは既にダウンロードされています。"
		echo "インストールを続行しますか？[y/N]"
		read answer
		case $answer in
		[Yy]* )
			;;
		* )
			echo "インストールを中止します。"
			exit 0
			;;
		esac
fi

# Brewfileのインストール
echo "ソフトウェアやツールをインストールしています..."
brew bundle --file=$DOTFILES_DIR/Brewfile

# 設定ファイルのシンボリックリンク作成(Stow)
# https://metacpan.org/dist/Stow/view/bin/stow
stow -d $SYMLINK_DIR -t $HOME --stow `ls $SYMLINK_DIR`
# ↓リンクを解除する
# stow -d $SYMLINK_DIR -t $HOME --delete `ls $SYMLINK_DIR`

# ツール・パッケージ類のインストール
sh $SHELL_DIR/package.sh

# システム設定
sh $SHELL_DIR/defaults.sh
